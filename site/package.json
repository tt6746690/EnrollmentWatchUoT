{
  "name": "enrollmentwatchuoft",
  "version": "1.0.0",
  "description": "## Planning + Daemon   + creates a daemon that runs python constantly + scrapping   + constantly check `/api/lastUpdated` to scrape new data     + compare json files and one downloaded       + done efficiently, cannot just overwrite       + update josn files if different     + populate database with enrollment data         + overwrite if changed       + requires         + procedure to `read`/`write` data. `write` is assumed to be infrequent     + efficiency       + incorporate use of `thread` in downloading about 5000 json files each time + storage   + `course = code-section-session` (`CSC369H1-F-20169`)   + as json file for each `course`     + under `/resources/session/subject` (`/resources/20169/`)     + info related to course, section, instructor, meeting, schedule,     + assuming general information changes infrequently and only the lastest version is of importance   + write a simple API for update (i.e. `read`/`write` specific fields) + database   + `enrolment` for each `course`     + `waitlist`: `bool`     + `actual_enrolment`: `int`     + `actual_waitlist`: `int`     + `timestamp`: `time` as epoch time + statistical inference   + exploratory     + data that is relevant       + before Jan 18, 2017 last day to add and change meeting sections in S courses       + `waitlist = Y`       + `teachingMethod = LEC`       + `section = S`       + `actualWaitlist` is not zero most of the time     + features         + year offer (1-4)       + enrollmentCapacity       + department (`CSC`, `STA`)       + time till last day to drop waitlist       + `demand = actualEnrolment * actualWaitlist`   + enrollment/waitlist prediction     + time series analysis: have to look more into this     + think about smaller problem that behaves nicer   + enrollment/waitlist     + correlation with other features (that may help to infer future..), i.e.         + length of lecture       + instructor   + use of machine learning in any way?     + ask others + backend: flask   + keep it simple + frontend: react   + keep it simple + UI    + search bar      + feed course code into it    + line graph     + no network request       + enroll or waitlist       + mean waitlist number adjustable      + requires re-fetch        + different subject     + highlight onselect     + info panel        + actual enrolment number        + course name",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tt6746690/EnrollmentWatchUoT.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/tt6746690/EnrollmentWatchUoT/issues"
  },
  "homepage": "https://github.com/tt6746690/EnrollmentWatchUoT#readme",
  "dependencies": {
    "@types/react": "^15.0.24",
    "@types/react-dom": "^15.5.0",
    "@types/react-redux": "^4.4.40",
    "awesome-typescript-loader": "^3.1.3",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "react-redux": "^5.0.4",
    "redux": "^3.6.0",
    "source-map-loader": "^0.2.1",
    "typescript": "^2.3.2"
  },
  "devDependencies": {
    "awesome-typescript-loader": "^3.1.3",
    "source-map-loader": "^0.2.1",
    "typescript": "^2.3.2"
  }
}
